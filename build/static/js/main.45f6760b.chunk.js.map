{"version":3,"sources":["components/Search/index.js","pages/Home/index.js","pages/Printer/index.js","pages/index.js","pages/Toner/index.js","App.js","serviceWorker.js","index.js"],"names":["strapi","StrapiClient","useStyles","makeStyles","theme","root","margin","spacing","props","React","useState","term","setTerm","brand","setBrand","undefined","item","setItem","brandOptions","setBrandOptions","termOptions","setTermOptions","classes","lookupBrand","b","a","get","_limit","brands","lookup","code","model_contains","printers","Grid","container","direction","className","Autocomplete","id","options","getOptionLabel","option","name","style","minWidth","onChange","e","v","renderInput","params","TextField","label","placeholder","variant","value","target","model","Button","onClick","onSearch","color","startIcon","Home","history","push","replace","justify","alignItems","Box","src","maxWidth","alt","align","Printer","match","toners","res","useEffect","fetchIt","console","log","fullname","p","backgroundColor","borderBottom","paddingBottom","xs","md","Card","width","image","Typography","gutterBottom","description","map","toner","sm","CardMedia","height","title","CardContent","minHeight","component","CardActions","href","link","textDecoration","Toner","App","Container","path","exact","Pages","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.45f6760b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Button, Grid, TextField} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport StrapiClient from 'strapi-client';\r\nconst BASE_URL = \"https://printers.tonersales.eu\";\r\nconst strapi = new StrapiClient(BASE_URL);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default (function(props) {\r\n\tconst [term, setTerm] = React.useState('');\r\n\tconst [brand, setBrand] = React.useState('');\r\n\tconst [item, setItem] = React.useState(undefined);\r\n\tconst [brandOptions, setBrandOptions] = React.useState([]);\r\n\tconst [termOptions, setTermOptions] = React.useState([]);\r\n\tconst classes = useStyles();\r\n\r\n\tconst lookupBrand = async function(b) {\r\n\t\tlet brands = await strapi.get(\"brands\", {'name_contains': b, _limit: 7});\r\n\t\tsetBrand(b);\r\n\t\tsetBrandOptions(brands);\r\n\t}\r\n\t\r\n\tconst lookup = async function(code) {\r\n\t\tlet printers = await strapi.get(\"printers\", {'brand.name_contains': brand, model_contains: code, _limit: 7});\r\n\t\tsetTerm(code);\r\n\t\tsetTermOptions(printers);\r\n\t}\r\n\t// console.log(brand, term, item);\r\n\treturn (\r\n\t\t<Grid container direction=\"row\" className = {classes.root}>\r\n      \t\t<Autocomplete\r\n\t\t\t  id=\"brand-term\"\r\n\t\t\t  options={brandOptions}\r\n\t\t\t  getOptionLabel={(option) => option.name}\r\n\t\t\t  style={{minWidth: 180}}\r\n\t\t\t  onChange={(e, v) => v && setBrand(v.name)}\r\n\t\t\t  renderInput={(params) => <TextField {...params} label=\"Μάρκα Εκτυπωτή\" placeholder=\"HP, Lexmark, Samsung...\" variant=\"outlined\" value={brand} onChange={(v) => lookupBrand(v.target.value)}/>}\r\n\t\t\t/>\r\n\t\t\t<Autocomplete\r\n\t\t\t  id=\"search-term\"\r\n\t\t\t  options={termOptions}\r\n\t\t\t  getOptionLabel={(option) => option.model}\r\n\t\t\t  style={{minWidth: 180}}\r\n\t\t\t  onChange={(e, v) => v && (setTerm(v.model) || setItem(v))}\r\n\t\t\t  renderInput={(params) => <TextField {...params} label=\"Κωδικός Εκτυπωτή\" variant=\"outlined\" value={term} onChange={(v) => lookup(v.target.value)}/>}\r\n\t\t\t/>\r\n      \t\t<Button \r\n\t      \tonClick={() => props.onSearch(brand, term, item)}\r\n\t        variant=\"contained\"\r\n\t        color=\"primary\"\r\n\t        startIcon={<SearchIcon/>}>\r\n\t      \t\tΒρες το\r\n      \t\t</Button>\r\n\t\t</Grid>\r\n\t);\r\n});","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Box} from '@material-ui/core';\r\nimport {SearchBox} from '../../components'; \r\n\r\nimport StrapiClient from 'strapi-client';\r\nconst BASE_URL = \"https://printers.tonersales.eu\";\r\nconst strapi = new StrapiClient(BASE_URL);\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     '& img': {\r\n//       margin: theme.spacing(5),\r\n//     },\r\n//   },\r\n// }));\r\n\r\n\r\n\r\nexport default function (props) {\r\n\tconst lookup = async function(brand, code, item) {\r\n\t\t// let printers = await strapi.get(\"printers\", {'brand.name_contains': brand, model_contains: code});\r\n\t\t// console.log(brand, code, item);\r\n\t\tprops.history.push(\"/printer/\"+item.id+\"/\"+item.brand.name + \"-\" + item.model.replace(' ', '-'));\r\n\t}\r\n\r\n  \treturn (\r\n\t\t<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n\t\t\t<Box className=\"logo-container\">\r\n\t\t\t\t<img src={'/logo.png'} style={{ maxWidth: 250 }} alt=\"Tonersales - Logo\"/>\r\n\t\t\t</Box>\r\n\t\t\t<Box className=\"logo-container\" align='center'>\r\n\t\t\t\t<h1><strong>TONERSALES</strong></h1>\r\n\t\t\t\t<h4>Βρές τα αναλώσιμα του εκτυπωτή σου εύκολα και γρήγορα!</h4><br />\r\n\t\t\t\t<small>Σημείωσε τη μάρκα και το μοντέλο του εκτυπωτή σου</small>  \r\n\t\t\t</Box>\r\n\t\t\t<Box className=\"search-container\">\r\n\t\t\t\t<SearchBox onSearch={(brand, code, item) => lookup(brand, code, item)}/>\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Grid, Button, Box, Card, CardContent, CardMedia, CardActions, Typography } from '@material-ui/core';\r\n\r\nimport StrapiClient from 'strapi-client';\r\nconst BASE_URL = \"https://printers.tonersales.eu\";\r\nconst strapi = new StrapiClient(BASE_URL);\r\n\r\nexport default function (props) {\r\n\tlet id = props.match.params.id || undefined;\r\n\tlet [item, setItem] = React.useState({toners: []});\r\n\r\n\r\n\tasync function fetchIt() {\r\n\t    let res = await strapi.get(\"printers\", {id});\r\n\t    setItem(res[0]);\r\n\t}\r\n\tReact.useEffect(() => {\r\n\t\tfetchIt();\r\n\t}, [item.id]);\r\n\tconsole.log(item);\r\n\r\n\tlet fullname = (item.brand && item.brand.name) + \" \" + item.model;\r\n\treturn (\r\n\t  \t<Box p={2} style={{backgroundColor: '#f5f5f5'}}>\r\n\t  \t\t<Grid container direction=\"row\" justify=\"space-around\" align=\"center\" style={{borderBottom:'1px solid', paddingBottom:48}}>\r\n\t\t  \t\t<Grid item xs={12} md={6} justify=\"space-around\">\r\n\t\t  \t\t\t<Card style={{width: 332}}>\r\n\t\t  \t\t\t\t<Box p={2}>\r\n\t\t  \t\t\t\t\t<img src={item.image} alt={'Image - ' + fullname} style={{ maxWidth : 300 }}/>\r\n\t\t  \t\t\t\t</Box>\r\n\t\t  \t\t\t</Card>\r\n\t\t  \t\t</Grid>\r\n\t\t  \t\t<Grid item xs={12} md={6} align=\"left\">\r\n\t\t  \t\t\t<div>\r\n\t\t  \t\t\t\t<Typography gutterBottom variant=\"h5\">\r\n\t\t  \t\t\t\t\tΕκτυπωτής {fullname}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t  \t\t\t</div>\r\n\t\t  \t\t\t<p>{item.description}</p>\r\n\t\t  \t\t</Grid>\r\n\t\t  \t</Grid>\r\n\t  \t\t<Grid item xs={12} align=\"left\">\r\n\t  \t\t\t<div>\r\n\t  \t\t\t\t<Typography gutterBottom variant=\"h6\">\r\n\t\t\t\t\t\tΑναλώσιμα για τον εκτυπωτή {fullname}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t  \t\t\t<Box container xs={12} p={10}>\r\n\t  \t\t\t{item.toners.map((toner) => \r\n\t  \t\t\t\t<Grid item xs={12} sm={6} md={4}>\r\n\t\t  \t\t\t\t<Card>\r\n\t\t  \t\t\t\t\t<CardMedia\r\n\t\t  \t\t\t\t\t  style={{height: 140}}\r\n\t\t\t\t\t          image={toner.image}\r\n\t\t\t\t\t          title={toner.model}\r\n\t\t\t\t\t        />\r\n\t\t\t\t\t    \t<CardContent style={{minHeight: 100}}>\r\n\t\t\t\t\t        \t<Typography variant=\"h5\" component=\"h2\">\r\n\t\t\t\t\t        \t\t{toner.model}\r\n\t\t\t\t\t        \t</Typography>\r\n\t\t\t\t\t      \t</CardContent>\r\n\t\t\t\t\t      \t<CardActions>\r\n\t\t\t\t\t\t        <a href={toner.link} target=\"_new\" style={{textDecoration:'none'}}>\r\n\t\t\t\t\t\t        \t<Button variant=\"contained\" color=\"primary\">Αγορά</Button>\r\n\t\t\t\t\t\t        </a>\r\n\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t    </Card>\r\n\t\t\t\t    </Grid>\r\n\t  \t\t\t)}\r\n\t  \t\t\t</Box>\r\n\t  \t\t</Grid>\r\n\t  \t</Box>\r\n  \t);\r\n}\r\n","import Home from './Home';\r\nimport Printer from './Printer';\r\nimport Toner from './Toner';\r\n\r\nexport default {\r\n\tHome,\r\n\tPrinter,\r\n\tToner\r\n}","import React from 'react';\r\n\r\nexport default function () {\r\n  return (\r\n  \t<div>\r\n  \t\tToner\r\n  \t</div>\r\n  );\r\n}\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\n\nimport { Grid, Container, Card, Box } from '@material-ui/core';\n\nimport Pages from './pages';\n\nimport { SearchBox } from './components';\n\nimport './App.css';\n\n\n// console.log(\"ALL\", All);\n\n\nfunction App() {\n  return (\n    <Router>\n    \t<div className=\"main-container\">\n    \t\t<Container>\n          <Grid item>\n  \t\t    \t<Card>\n  \t\t\t\t\t    <Route path=\"/\" exact component={Pages.Home}/>\n  \t\t\t      \t<Route path=\"/printer/:id/:name\" exact component={Pages.Printer}/>\n  \t\t\t      \t<Route path=\"/toner/:id/:name\" exact component={Pages.Toner}/>\n  \t\t\t    </Card>\n  \t\t    </Grid>\n        </Container>\n\t    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}